name: spring-keycloak-nginx-stack
services:
  postgres:
    image: postgres:16.3
    container_name: postgres
    ports:
      - 5432:5432
    secrets:
      - db_password
    environment:
      POSTGRES_DB: keycloak
      POSTGRES_USER: keycloak
      POSTGRES_PASSWORD_FILE: /run/secrets/db_password
    networks:
      - app-network
    volumes:
      - db-data:/var/lib/postgresql/data/
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -d $$POSTGRES_DB"]
      interval: 10s
      timeout: 5s
      retries: 5

  keycloak:
    container_name: keycloak
    image: quay.io/keycloak/keycloak:25.0.2
    ports:
      - 8080:8080
    environment:
      KEYCLOAK_ADMIN: admin
      KEYCLOAK_ADMIN_PASSWORD: ${KEYCLOAK_ADMIN_PASSWORD}
      KC_DB: postgres
      KC_DB_URL_HOST: postgres
      KC_DB_URL_DATABASE: keycloak
      KC_DB_USERNAME: keycloak
      KC_DB_PASSWORD: ${KC_DB_PASSWORD}
      KC_LOG_LEVEL: INFO,org.infinispan:DEBUG,org.keycloak.events:DEBUG
      KC_PROXY_HEADERS: xforwarded
      KC_HEALTH_ENABLED: true
    networks:
      - app-network
    command: start-dev
    # Keycloak containers doesn't come with curl or wget in it, this forces the users to use alternative mechanisms to realise
    # health check for the keycloak standard containers.
    healthcheck:
      test:
        [
          "CMD-SHELL",
          "exec 3<>/dev/tcp/127.0.0.1/9000;echo -e \"GET /health/ready HTTP/1.1\r\nhost: http://localhost\r\nConnection: close\r\n\r\n\" >&3;grep \"HTTP/1.1 200 OK\" <&3",
        ]
      interval: 10s
      timeout: 1s
      retries: 30
    depends_on:
      postgres:
        condition: service_healthy

  service-app:
    container_name: service-app
    build:
      context: ./service-app
      dockerfile: Dockerfile
    image: service-app:1.0.0
    ports:
      - 9090:9090
      - 9095:9095
    environment:
      SPRING_SECURITY_OAUTH2_RESOURCESERVER_JWT_ISSUER_URI: http://host.docker.internal:8080/realms/company-services
    networks:
      - app-network
    healthcheck:
      test:
        [
          "CMD-SHELL",
          "curl -s http://localhost:9095/management/health || exit 1",
        ]
      interval: 10s
      timeout: 1s
      retries: 30
    depends_on:
      keycloak:
        condition: service_healthy

  nginx:
    container_name: nginx
    image: nginx:1.25.4
    hostname: keycloak-service
    ports:
      #keycloak service
      - 8081:8081
      #service-app service
      - 8082:8082
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
    networks:
      - app-network
    healthcheck:
      test: ["CMD-SHELL", "curl -s http://localhost:8085/health || exit 1"]
      interval: 10s
      timeout: 1s
      retries: 30
    depends_on:
      service-app:
        condition: service_healthy

networks:
  app-network:
    name: app-network
    driver: bridge

volumes:
  db-data:

secrets:
  db_password:
    file: db/db_password.txt
